package PracticeApp5.core.servlets;

import com.day.cq.search.PredicateGroup;
import com.day.cq.search.Query;
import com.day.cq.search.QueryBuilder;
import com.day.cq.search.result.Hit;
import com.day.cq.search.result.SearchResult;
import org.apache.felix.scr.annotations.Reference;
import org.apache.felix.scr.annotations.sling.SlingServlet;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.api.servlets.SlingSafeMethodsServlet;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.jcr.Session;
import javax.servlet.ServletException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

@SlingServlet(paths = "/bin/PracticeApp5/QueryBuilderTest3")
//finding List of all pages
public class QueryBuilderTest3 extends SlingSafeMethodsServlet {

    @Reference
    private QueryBuilder builder;
    private static final Logger log = LoggerFactory.getLogger(QueryBuilderTest3.class);
    private Session session;

    @Override
    protected void doGet(final SlingHttpServletRequest request,
                         final SlingHttpServletResponse response) throws ServletException, IOException {
        final Resource resource = request.getResource();
        response.getOutputStream().println(resource.toString());
        response.getOutputStream().println(
                "This content is generated by the QueryBuilderTest3");

        try {
            log.info("----------< Executing Query Builder Servlet >----------");
            ResourceResolver resourceResolver = request.getResourceResolver();
            session = resourceResolver.adaptTo(Session.class);
            //Map for the predicates
            Map<String, String> predicate = new HashMap();
            //Configuring the Map for the predicate
            predicate.put("path", "/content/PracticeApp5/en");
            predicate.put("type", "cq:Page");
            predicate.put("p.limit", "-1");
            //Creating the Query instance
            Query query = builder.createQuery(PredicateGroup.create(predicate), session);
            query.setStart(0);
            query.setHitsPerPage(20);
            //Getting the search results
            SearchResult searchResult = query.getResult();
            for(Hit hit : searchResult.getHits()) {
                String path = hit.getPath();
                response.getOutputStream().println(path);
            }
        }catch (Exception e) {
            log.error(e.getMessage(), e);
        } finally {
            if(session != null) {
                session.logout();
            }
        }

    }
}
